//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EquellaMetadataUtility.EQUELLA {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://soap.remoting.web.tle.com", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://soap.remoting.web.tle.com", ConfigurationName="EQUELLA.SoapService41PortType")]
    public interface SoapService41PortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void addGroup(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getContributableCollections();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        EquellaMetadataUtility.EQUELLA.ArrayOfString getTaskFilterNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string addUser(string in0, string in1, string in2, string in3, string in4, string in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getSchema(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string rejectTask(string in0, int in1, string in2, string in3, string in4, bool in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void uploadFile(string in0, string in1, string in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool userExists(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string newItem(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void deleteItem(string in0, int in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getItem(string in0, int in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string newVersionItem(string in0, int in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void deleteGroup(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string login(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void removeUserFromAllGroups(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string editItem(string in0, int in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getCollection(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void deleteFile(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void addUserToGroup(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string acceptTask(string in0, int in1, string in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string searchItems(string in0, EquellaMetadataUtility.EQUELLA.ArrayOfString in1, string in2, bool in3, int in4, bool in5, int in6, int in7);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string editUser(string in0, string in1, string in2, string in3, string in4, string in5);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool isUserInGroup(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void unlock(string in0, int in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getUser(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool userNameExists(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getTaskList(string in0, int in1, int in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void removeUserFromGroup(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void keepAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        int queryCount(EquellaMetadataUtility.EQUELLA.ArrayOfString in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void cancelItemEdit(string in0, int in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string saveItem(string in0, bool in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool groupExists(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void removeAllUsersFromGroup(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string loginWithToken(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void unzipFile(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getGroupUuidForName(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void deleteUser(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        void archiveItem(string in0, int in1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SoapService41PortTypeChannel : EquellaMetadataUtility.EQUELLA.SoapService41PortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapService41PortTypeClient : System.ServiceModel.ClientBase<EquellaMetadataUtility.EQUELLA.SoapService41PortType>, EquellaMetadataUtility.EQUELLA.SoapService41PortType {
        
        public SoapService41PortTypeClient() {
        }
        
        public SoapService41PortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapService41PortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapService41PortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapService41PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void addGroup(string in0, string in1) {
            base.Channel.addGroup(in0, in1);
        }
        
        public string getContributableCollections() {
            return base.Channel.getContributableCollections();
        }
        
        public EquellaMetadataUtility.EQUELLA.ArrayOfString getTaskFilterNames() {
            return base.Channel.getTaskFilterNames();
        }
        
        public string addUser(string in0, string in1, string in2, string in3, string in4, string in5) {
            return base.Channel.addUser(in0, in1, in2, in3, in4, in5);
        }
        
        public string getSchema(string in0) {
            return base.Channel.getSchema(in0);
        }
        
        public string rejectTask(string in0, int in1, string in2, string in3, string in4, bool in5) {
            return base.Channel.rejectTask(in0, in1, in2, in3, in4, in5);
        }
        
        public void uploadFile(string in0, string in1, string in2, bool in3) {
            base.Channel.uploadFile(in0, in1, in2, in3);
        }
        
        public bool userExists(string in0) {
            return base.Channel.userExists(in0);
        }
        
        public string newItem(string in0) {
            return base.Channel.newItem(in0);
        }
        
        public void deleteItem(string in0, int in1) {
            base.Channel.deleteItem(in0, in1);
        }
        
        public string getItem(string in0, int in1, string in2) {
            return base.Channel.getItem(in0, in1, in2);
        }
        
        public string newVersionItem(string in0, int in1, bool in2) {
            return base.Channel.newVersionItem(in0, in1, in2);
        }
        
        public void deleteGroup(string in0) {
            base.Channel.deleteGroup(in0);
        }
        
        public string login(string in0, string in1) {
            return base.Channel.login(in0, in1);
        }
        
        public void removeUserFromAllGroups(string in0) {
            base.Channel.removeUserFromAllGroups(in0);
        }
        
        public string editItem(string in0, int in1, bool in2) {
            return base.Channel.editItem(in0, in1, in2);
        }
        
        public string getCollection(string in0) {
            return base.Channel.getCollection(in0);
        }
        
        public void deleteFile(string in0, string in1) {
            base.Channel.deleteFile(in0, in1);
        }
        
        public void addUserToGroup(string in0, string in1) {
            base.Channel.addUserToGroup(in0, in1);
        }
        
        public string acceptTask(string in0, int in1, string in2, bool in3) {
            return base.Channel.acceptTask(in0, in1, in2, in3);
        }
        
        public string searchItems(string in0, EquellaMetadataUtility.EQUELLA.ArrayOfString in1, string in2, bool in3, int in4, bool in5, int in6, int in7) {
            return base.Channel.searchItems(in0, in1, in2, in3, in4, in5, in6, in7);
        }
        
        public string editUser(string in0, string in1, string in2, string in3, string in4, string in5) {
            return base.Channel.editUser(in0, in1, in2, in3, in4, in5);
        }
        
        public bool isUserInGroup(string in0, string in1) {
            return base.Channel.isUserInGroup(in0, in1);
        }
        
        public void unlock(string in0, int in1) {
            base.Channel.unlock(in0, in1);
        }
        
        public string getUser(string in0) {
            return base.Channel.getUser(in0);
        }
        
        public bool userNameExists(string in0) {
            return base.Channel.userNameExists(in0);
        }
        
        public string getTaskList(string in0, int in1, int in2) {
            return base.Channel.getTaskList(in0, in1, in2);
        }
        
        public void removeUserFromGroup(string in0, string in1) {
            base.Channel.removeUserFromGroup(in0, in1);
        }
        
        public void keepAlive() {
            base.Channel.keepAlive();
        }
        
        public int queryCount(EquellaMetadataUtility.EQUELLA.ArrayOfString in0, string in1) {
            return base.Channel.queryCount(in0, in1);
        }
        
        public void cancelItemEdit(string in0, int in1) {
            base.Channel.cancelItemEdit(in0, in1);
        }
        
        public string saveItem(string in0, bool in1) {
            return base.Channel.saveItem(in0, in1);
        }
        
        public bool groupExists(string in0) {
            return base.Channel.groupExists(in0);
        }
        
        public void removeAllUsersFromGroup(string in0) {
            base.Channel.removeAllUsersFromGroup(in0);
        }
        
        public void logout() {
            base.Channel.logout();
        }
        
        public string loginWithToken(string in0) {
            return base.Channel.loginWithToken(in0);
        }
        
        public void unzipFile(string in0, string in1, string in2) {
            base.Channel.unzipFile(in0, in1, in2);
        }
        
        public string getGroupUuidForName(string in0) {
            return base.Channel.getGroupUuidForName(in0);
        }
        
        public void deleteUser(string in0) {
            base.Channel.deleteUser(in0);
        }
        
        public void archiveItem(string in0, int in1) {
            base.Channel.archiveItem(in0, in1);
        }
    }
}
